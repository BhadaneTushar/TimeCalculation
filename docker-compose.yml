version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: postgres_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: time_db
      POSTGRES_USER: time_user
      POSTGRES_PASSWORD: time_password
    ports:
      - "5437:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./backend/backend/src/main/resources/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U time_user -d time_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  backend:
    build:
      context: ./backend/backend
      dockerfile: Dockerfile
    container_name: spring_backend
    restart: unless-stopped
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/time_db
      SPRING_DATASOURCE_USERNAME: time_user
      SPRING_DATASOURCE_PASSWORD: time_password
    ports:
      - "8081:8081"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: react_frontend
    restart: unless-stopped
    environment:
      VITE_API_BASE_URL: http://backend:8081
    ports:
      - "5173:5173"
    depends_on:
      - backend
    networks:
      - app-network

volumes:
  db_data:

networks:
  app-network:
    driver: bridge 